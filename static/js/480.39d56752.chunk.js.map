{"version":3,"file":"static/js/480.39d56752.chunk.js","mappings":"qMACA,QAA6B,4BAA7B,EAAsE,4BAAtE,EAAiH,8BAAjH,EAAgM,+B,aCKhM,MA0CA,EA1CgBA,KACd,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,MACbC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACpCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAkBnC,OAhBAK,EAAAA,EAAAA,YAAU,KACRH,GAAa,GACQI,WACnB,IACEJ,GAAa,GACb,MAAMK,QAAcC,EAAAA,EAAAA,IAAkBZ,GACtCG,EAAWQ,EACb,CAAE,MAAOJ,GACPC,EAAS,0BACX,CAAC,QACCF,GAAa,EACf,GAEFO,EAAc,GACb,CAACb,KAGFc,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGX,IAAaY,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IACpBX,IAASU,EAAAA,EAAAA,KAAA,OAAAD,SAAMT,IACfL,EAAQiB,OAAS,GAChBF,EAAAA,EAAAA,KAAA,MAAIG,UAAWC,EAAkBL,SAC9Bd,EAAQoB,KAAIC,IACXT,EAAAA,EAAAA,MAAA,MAAoBM,UAAWC,EAAkBL,SAAA,EAC/CF,EAAAA,EAAAA,MAAA,MAAIM,UAAWC,EAAoBL,SAAA,CAAC,WAASO,EAAOC,OAAO,QAC3DP,EAAAA,EAAAA,KAAA,KAAGG,UAAWC,EAAqBL,SAAEO,EAAOE,YAFrCF,EAAOG,SAOpBT,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gDAEL,C,mFCtCAN,eAAeiB,IAEpB,aADuBC,EAAAA,EAAMC,IAAI,uBACjBC,KAAKC,OACvB,CACOrB,eAAesB,EAAuBC,GAI3C,aAHuBL,EAAAA,EAAAA,GACpB,sBAAqBK,gDAERH,KAAKC,OACvB,CACOrB,eAAewB,EAAkBC,GAEtC,aADuBP,EAAAA,EAAAA,GAAO,SAAQO,qBACtBL,IAClB,CAEOpB,eAAe0B,EAAeD,GAEnC,aADuBP,EAAAA,EAAAA,GAAO,SAAQO,6BACtBL,KAAKO,IACvB,CACO3B,eAAeE,EAAkBuB,GAItC,aAHuBP,EAAAA,EAAAA,GACpB,SAAQO,oCAEKL,KAAKC,OACvB,CA3BAH,EAAAA,EAAMU,SAASC,QAAU,+BACzBX,EAAAA,EAAMU,SAASE,OAAS,CAAEC,QAFd,mC","sources":["webpack://react-homework-template/./src/components/Reviews.module.css?0159","components/Reviews.jsx","services/API.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewList\":\"Reviews_reviewList__BK3zc\",\"reviewItem\":\"Reviews_reviewItem__Zf9-V\",\"reviewAuthor\":\"Reviews_reviewAuthor__ToQNp\",\"loader\":\"Reviews_loader__RuwPE\",\"reviewContent\":\"Reviews_reviewContent__5Gwrr\"};","import Loader from 'components/Loader';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/API';\nimport styles from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const MovieReviews = async () => {\n      try {\n        setIsLoading(true);\n        const movie = await fetchMovieReviews(movieId);\n        setReviews(movie);\n      } catch (error) {\n        setError('Something went wrong...');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    MovieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <div>{error}</div>}\n      {reviews.length > 0 ? (\n        <ul className={styles.reviewList}>\n          {reviews.map(review => (\n            <li key={review.id} className={styles.reviewItem}>\n              <h3 className={styles.reviewAuthor}>Author: {review.author} </h3>\n              <p className={styles.reviewContent}>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <h2>We don't have any reviews for this movie.</h2>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst KEY = '4b14d9ad7ca21f45278ad0b78c44423b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: KEY };\n\nexport async function fetchTrending() {\n  const response = await axios.get('trending/movie/day');\n  return response.data.results;\n}\nexport async function fetchSearchMovieByWord(query) {\n  const response = await axios(\n    `search/movie?query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  return response.data.results;\n}\nexport async function fetchMovieDetails(movie_id) {\n  const response = await axios(`movie/${movie_id}?language=en-US`);\n  return response.data;\n}\n\nexport async function fetchMovieCast(movie_id) {\n  const response = await axios(`movie/${movie_id}/credits?language=en-US`);\n  return response.data.cast;\n}\nexport async function fetchMovieReviews(movie_id) {\n  const response = await axios(\n    `movie/${movie_id}/reviews?language=en-US&page=1`\n  );\n  return response.data.results;\n}\n"],"names":["Reviews","movieId","useParams","reviews","setReviews","useState","isLoading","setIsLoading","error","setError","useEffect","async","movie","fetchMovieReviews","MovieReviews","_jsxs","_Fragment","children","_jsx","Loader","length","className","styles","map","review","author","content","id","fetchTrending","axios","get","data","results","fetchSearchMovieByWord","query","fetchMovieDetails","movie_id","fetchMovieCast","cast","defaults","baseURL","params","api_key"],"sourceRoot":""}