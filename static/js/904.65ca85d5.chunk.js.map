{"version":3,"file":"static/js/904.65ca85d5.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieList.module.css?f66a","webpack://react-homework-template/./src/components/MovieCard.module.css?c9c1","components/MovieCard.jsx","components/MovieList.jsx","webpack://react-homework-template/./src/components/SearchBar.module.css?5525","components/SearchBar.jsx","pages/Movies.jsx","services/API.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__M8ygs\"};","// extracted by mini-css-extract-plugin\nexport default {\"movieItem\":\"MovieCard_movieItem__W6IRp\",\"movieLink\":\"MovieCard_movieLink__zjMx0\",\"movieImage\":\"MovieCard_movieImage__ViSwS\",\"movieTitle\":\"MovieCard_movieTitle__-EYuZ\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './MovieCard.module.css';\n\nfunction MovieCard({ movie, prevLocation }) {\n  return (\n    <li className={styles.movieItem}>\n      <Link\n        to={`/movies/${movie.id}`}\n        state={{ from: prevLocation }}\n        className={styles.movieLink}\n      >\n        <img\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w200/${movie.poster_path}`\n              : {}\n          }\n          alt={movie.title || movie.name}\n          className={styles.movieImage}\n        />\n        <p className={styles.movieTitle}>{movie.title || movie.name}</p>\n      </Link>\n    </li>\n  );\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    name: PropTypes.string,\n    posterPath: PropTypes.string,\n  }).isRequired,\n  prevLocation: PropTypes.object.isRequired,\n};\n\nexport default MovieCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './MovieList.module.css';\nimport MovieCard from 'components/MovieCard';\n\nconst MovieList = ({ movies, prevLocation }) => {\n  return (\n    <ul className={styles.movieList}>\n      {movies?.map(movie => (\n        <MovieCard key={movie.id} movie={movie} prevLocation={prevLocation} />\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n      posterPath: PropTypes.string,\n    })\n  ).isRequired,\n  prevLocation: PropTypes.object.isRequired,\n};\n\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchBar_searchForm__ngBm-\",\"searchInput\":\"SearchBar_searchInput__Yk68W\",\"searchButton\":\"SearchBar_searchButton__YLute\"};","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\n\nimport styles from './SearchBar.module.css';\n\nconst SearchBar = ({ onSearch }) => {\n  const location = useLocation();\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleQuerySearch = event => {\n    setSearchQuery(event.target.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (searchQuery.trim() === '') {\n      alert('Enter the film title');\n      return;\n    }\n\n    onSearch(searchQuery);\n  };\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    const savedSearchQuery = queryParams.get('query');\n    if (savedSearchQuery) {\n      setSearchQuery(savedSearchQuery);\n    }\n  }, [location.search]);\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.searchForm}>\n      <input\n        type=\"text\"\n        name=\"searchQuery\"\n        value={searchQuery}\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search...\"\n        onChange={handleQuerySearch}\n        className={styles.searchInput}\n      />\n      <button type=\"submit\" className={styles.searchButton}>\n        Search\n      </button>\n    </form>\n  );\n};\n\nSearchBar.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import Loader from 'components/Loader';\nimport MovieList from 'components/MovieList';\nimport SearchBar from 'components/SearchBar';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\n\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovieByWord } from 'services/API';\n\nfunction Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const location = useLocation();\n  const searchRequest = searchParams.get('query');\n\n  useEffect(() => {\n    if (!searchRequest) {\n      return;\n    }\n\n    const getMovie = async () => {\n      try {\n        setIsLoading(true);\n        const movies = await fetchSearchMovieByWord(searchRequest);\n        setMovies(movies);\n        if (!movies.length) {\n          alert('Your movies were not found!');\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovie();\n  }, [searchRequest]);\n\n  function onSubmit(value) {\n    setSearchParams({ query: `${value}` });\n  }\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <div>{error}</div>}\n      <SearchBar onSearch={onSubmit} />\n      {movies && <MovieList movies={movies} prevLocation={location} />}\n    </>\n  );\n}\n\nexport default Movies;\n","import axios from 'axios';\n\nconst KEY = '4b14d9ad7ca21f45278ad0b78c44423b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: KEY };\n\nexport async function fetchTrending() {\n  const response = await axios.get('trending/movie/day');\n  return response.data.results;\n}\nexport async function fetchSearchMovieByWord(query) {\n  const response = await axios(\n    `search/movie?query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  return response.data.results;\n}\nexport async function fetchMovieDetails(movie_id) {\n  const response = await axios(`movie/${movie_id}?language=en-US`);\n  return response.data;\n}\n\nexport async function fetchMovieCast(movie_id) {\n  const response = await axios(`movie/${movie_id}/credits?language=en-US`);\n  return response.data.cast;\n}\nexport async function fetchMovieReviews(movie_id) {\n  const response = await axios(\n    `movie/${movie_id}/reviews?language=en-US&page=1`\n  );\n  return response.data.results;\n}\n"],"names":["_ref","movie","prevLocation","_jsx","className","styles","children","_jsxs","Link","to","id","state","from","src","poster_path","alt","title","name","movies","map","MovieCard","onSearch","location","useLocation","searchQuery","setSearchQuery","useState","useEffect","savedSearchQuery","URLSearchParams","search","get","onSubmit","event","preventDefault","trim","alert","type","value","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","searchParams","setSearchParams","useSearchParams","setMovies","error","setError","isLoading","setIsLoading","searchRequest","async","fetchSearchMovieByWord","length","message","getMovie","_Fragment","Loader","SearchBar","query","MovieList","fetchTrending","axios","data","results","fetchMovieDetails","movie_id","fetchMovieCast","cast","fetchMovieReviews","defaults","baseURL","params","api_key"],"sourceRoot":""}